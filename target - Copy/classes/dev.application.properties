#security
server.ssl.key-store-type=PKCS12
server.ssl.key-store=classpath:keys/keystore.p12
server.ssl.key-store-password=xxxxxx
server.ssl.key-alias=tomcat
server.ssl.trust-store=classpath:keys/truststore.jks

# JDBC properties
hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.datasource.url=jdbc:mysql://northwind-01-mysql.mysql.database.azure.com:3306/twelve-quotes?requireSSL=false&useSSL=true&verifyServerCertificate=false&serverTimezone=UTC
spring.datasource.username=minad06
spring.datasource.password=Creeper01!
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect


#jdbc:mysql://example.com:3306/MYDB?verifyServerCertificate=true&useSSL=true&requireSSL=true&
#clientCertificateKeyStoreUrl=file:cert/keystore.jks&clientCertificateKeyStorePassword=123456&
#trustCertificateKeyStoreUrl=file:cert/truststore.jks&trustCertificateKeyStorePassword=123456

#jdbc:mysql://localhost:3306/test?verifyServerCertificate=false&useSSL=false&requireSSL=false

#keytool -printcert -sslserver localhost -rfc > localhost.crt
#keytool -import -trustcacerts -alias localhost -file localhost.crt -keystore D:\java\jre1.8.0_341\lib\security\cacerts -storepass changeit
#keytool -delete -alias northwind -keystore D:\java\jre1.8.0_341\lib\security\cacerts -storepass changeit
#keytool -import -trustcacerts -alias my-ca -file ca.crt -keystore D:\java\jre1.8.0_341\lib\security\cacerts -storepass changeit

